<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
    <description>Spring MVC Configuration</description>
    <!-- 加载配置属性文件 -->
	<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath:sys.properties" /> -->
	
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.yunpay.sdk.ctrl" />
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。
	即解决了@Controller注解的使用前提配置。 -->
	<mvc:annotation-driven />
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址-->
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="1"/>
	</bean>
	<!-- 静态资源问题，不需要进行拦截过滤，主要是针对css，js，image等资源 -->
	<mvc:resources mapping="/common/**" location="/common/" cache-period="31536000" />
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000" />
	<mvc:resources mapping="/dwz/**" location="/dwz/" cache-period="31536000" />
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" />
	<!-- 多部分文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <property name="maxUploadSize" value="104857600" />
	     <property name="maxInMemorySize" value="4096" />
	     <property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	<import resource="classpath:spring/spring-context-service.xml" />
</beans>