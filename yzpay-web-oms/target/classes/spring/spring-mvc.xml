<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    <description>Spring MVC Configuration</description>
    
    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:sys.properties" />
	
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.yunpay.controller;com.yunpay.permission.controller" />
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- 相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个bean，配置一些messageconverter。
	即解决了@Controller注解的使用前提配置。 -->
	<mvc:annotation-driven />
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址-->
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="1"/>
	</bean>
	
		<!-- 配置MultipartResolver用于文件上传-->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 大小限制为25兆 -->
		<property name="maxUploadSize" value="131072000"/>
	</bean>

	<!-- 配置freeMarker的模板路径等配置 -->
	<!--  <bean id="freemarkerConfig"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
	    <property name="templateLoaderPath" value="/WEB-INF/views/" />  
	    <property name="defaultEncoding" value="UTF-8" />  模板的编码格式
	    <property name="freemarkerSettings">  设置FreeMarker环境属性
	    <props>  
	        <prop key="template_update_delay">10</prop> 刷新模板的周期，单位为秒
	        <prop key="locale">zh_CN</prop>  本地化设置
	        <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
	        <prop key="date_format">yyyy-MM-dd</prop> 时间格式化
	        <prop key="number_format">#.##</prop> 
	        <prop key="classic_compatible">true</prop>
	        配置自定义的freemarker异常处理
	         <prop key="template_exception_handler">com.xxx.web.exception.FreeMarkerExceptionHandler</prop> 
	    </props>  
	    </property>  
	</bean> -->
	
	<!-- freemarker视图解析器 -->  
 	<!-- <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
		<property name="cache" value="false" />
       	 <property name="prefix" value="" /> 上面已经配了，这里就不用配啦
		<property name="suffix" value="${web.view.suffix}"/>
	   	<property name="contentType" value="text/html;charset=UTF-8" />  
	   	此变量值为pageContext.request, 页面使用方法：rc.contextPath  
	   	<property name="requestContextAttribute" value="rc" />
	   	<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        <property name="allowSessionOverride" value="true" />
        <property name="allowRequestOverride" value="true" />
        <property name="exposeSpringMacroHelpers" value="false" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="order" value="0"/>
        <property name="requestContextAttribute" value="request" />
	</bean> -->

	<!-- 静态资源问题，不需要进行拦截过滤，主要是针对css，js，image等资源 -->
	<mvc:resources mapping="/common/**" location="/common/" cache-period="31536000" />
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31536000" />
	<mvc:resources mapping="/dwz/**" location="/dwz/" cache-period="31536000" />
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico" />
	
	<!-- 导入文件 -->
	<import resource="classpath:spring/permission/spring-mvc-shiro.xml" />
</beans>