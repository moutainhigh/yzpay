<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunpay.permission.dao.impl.SysMenuDaoImpl">

	<sql id="t_sys_menu"> T_SYS_MENU </sql>
	<sql id="t_sys_role"> T_SYS_ROLE </sql>
	<sql id="t_sys_role_menu"> T_SYS_ROLE_MENU </sql>

	<insert id="insert" parameterType="com.yunpay.permission.entity.SysMenu" >
		insert into
		<include refid="t_sys_menu" />
		(version,status,creater,create_time, editor, edit_time, remark,
		name,url,parent_id,pm_number,is_leaf,pm_level,target_name
		) values
		(0,#{status,jdbcType=VARCHAR},#{creater,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{editor,jdbcType=VARCHAR},#{editTime,jdbcType=TIMESTAMP},
		#{remark,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR},
		#{parent.id,jdbcType=VARCHAR},
		#{number,jdbcType=VARCHAR},
		#{isLeaf,jdbcType=VARCHAR},
		#{level,jdbcType=INTEGER},
		#{targetName,jdbcType=VARCHAR}
		)
	</insert>

	<update id="update" parameterType="com.yunpay.permission.entity.SysMenu">
		update
		<include refid="t_sys_menu" />
		<set>
			version = #{version}+1,
			name = #{name,jdbcType=VARCHAR},
			url = #{url,jdbcType=VARCHAR},
			parent_id = #{parent.id,jdbcType=VARCHAR},
			pm_number = #{number,jdbcType=VARCHAR},
			is_leaf = #{isLeaf,jdbcType=VARCHAR},
			pm_level =#{level,jdbcType=INTEGER},
			target_name = #{targetName,jdbcType=VARCHAR}
		</set>
		where ID = #{id} and VERSION = #{version}
	</update>

	<delete id="deleteByPrimaryKey" parameterType="long">
		delete from
		<include refid="t_sys_menu" />
		where ID = #{id}
	</delete>

	<select id="selectByPrimaryKey" parameterType="Long" resultType="com.yunpay.permission.entity.SysMenu">
		select
		d.id,d.version,d.status,d.creater,
		d.create_time as "createTime", d.editor,
		d.edit_time as "editTime", d.remark,
		d.name as "name",
		d.url as "url",
		d.parent_id as "parent.id",
		parent.name as "parent.name",
		d.pm_number as "number",
		d.is_leaf as "isLeaf",
		d.pm_level as "level",
		d.target_name as "targetName"
		from
		<include refid="t_sys_menu" />
		d
		left join
		<include refid="t_sys_menu" />
		parent
		on d.parent_id = parent.id
		where d.id = #{id}
	</select>

	<select id="listPage" parameterType="java.util.Map" resultType="com.yunpay.permission.entity.SysMenu">
		select
		d.id,d.version,d.status,d.creater,
		d.create_time as "createTime", d.editor,
		d.edit_time as "editTime", d.remark,
		d.name as "name",
		d.url as "url",
		d.parent_id as "parent.id",
		d.pm_number as "number",
		d.is_leaf as "isLeaf"ï¼Œ
		d.pm_level as "level",
		d.target_name as "targetName"
		from
		<include refid="t_sys_menu" />
		as D

	</select>

	<select id="listPageCount" parameterType="java.util.Map" resultType="int">
		select count(1) from
		<include refid="t_sys_menu" />
		D
	</select>

	<sql id="condition_sql">
		<if test="isLeaf != null and isLeaf != ''"> and is_leaf = #{isLeaf}</if>
		<if test="name != null and name != ''"> and NAME = #{name}</if>
		<if test="parentId != null and parentId != ''"> and parent_id = #{parentId}</if>
	</sql>

	<select id="listBy" parameterType="java.util.Map" resultType="com.yunpay.permission.entity.SysMenu">
		select * from
		<include refid="t_sys_menu" />
		<where>
			<include refid="condition_sql" />
		</where>
	</select>

<select id="listByParent" parameterType="Long" resultType="java.util.Map">
		select
		m.id,m.version,m.status,m.creater,
		m.create_time as "createTime", m.editor,
		m.edit_time as "editTime", m.remark,
		m.parent_id as "pId",
		m.name as "name",
		m.is_leaf as "isLeaf",
		m.pm_level as "level",
		m.target_name as "targetName",
		m.url as "url"
		from
		<include refid="t_sys_menu" />
		m where 1=1
		<where>
			<if test="parentid!=null and parentid!=''">
				and m.parent_id = #{parentId}
			</if>
		</where>
		
		order by m.id asc
	</select>
	
	<select id="listByParentId" parameterType="long" resultType="com.yunpay.permission.entity.SysMenu">
		select
		id as "id" ,
		version as "version",
		parent_id as "parent.id",
		name as "name",
		is_leaf as "isLeaf",
		pm_level as "level",
		target_name as"targetName"
		from
		<include refid="t_sys_menu" />
		where parent_id = #{parentId}
	</select>

	<select id="listByRoleIds" parameterType="string" resultType="java.util.Map">
		select distinct * from (
		select
		m.id as "id",
		m.version as "version",
		m.parent_id as "pId",
		m.name as "name",
		m.is_leaf as "isLeaf",
		m.pm_level as "level",
		m.url as "url",
		m.target_name as "targetName",
		m.pm_number as "number"
		from
		<include refid="t_sys_role" />
		r
		left join
		<include refid="t_sys_role_menu" />
		rm
		on r.id = rm.role_id
		left join
		<include refid="t_sys_menu" />
		m
		on rm.menu_id = m.id
		where r.id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
		order by m.pm_number asc
		) t order by number
	</select>

</mapper>
